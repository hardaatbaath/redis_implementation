// src/netio.h
#pragma once

#include <stdint.h>
#include <stddef.h>
#include <vector>
#include <string>

struct Connection {
    int socket_fd = -1; // listening/accepted socket fd, by default set to -1

    // application's intentions
    bool want_read = false;
    bool want_write = false;
    bool want_close = false;

    // buffered input and output
    std::vector<uint8_t> incoming; // data to be parsed by the application
    std::vector<uint8_t> outgoing; // responses generated by the application
};

struct Response; // from protocol.h

bool handle_one_request(Connection *conn);
void handle_read(Connection *conn);
void handle_write(Connection *conn);

